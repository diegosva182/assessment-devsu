trigger:
  branches:
    include:
      - master

variables:
  imageName: 'devsu-node-app'
  dockerRegistryServiceConnection: 'DOCKER_HUB_CONN'
  dockerRepository: 'diegosva182/devsu-node-app'

pool:
  vmImage: 'ubuntu-latest'

stages:

# ----------------------
# STAGE: Build & Test
# ----------------------
- stage: Build
  displayName: 'Build & Test Node App'
  jobs:
    - job: Build
      displayName: 'Build Job'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: 'Install Node.js'

        - script: |
            npm install
            npm run test -- --coverage --coverageReporters=cobertura
            if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then
              npx eslint .
            fi
          displayName: 'Run Tests and Lint'

        - task: PublishCodeCoverageResults@1
          displayName: 'Publish Code Coverage'
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: coverage/cobertura-coverage.xml
            pathToSources: $(Build.SourcesDirectory)



# ----------------------
# STAGE: Docker Build & Push
# ----------------------
- stage: Docker
  displayName: 'Docker Build, Scan and Push'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - job: Docker
      displayName: 'Build, Scan & Push Docker Image'
      steps:
        - task: Docker@2
          displayName: 'Docker Build & Push'
          inputs:
            containerRegistry: '$(dockerRegistryServiceConnection)'
            repository: '$(dockerRepository)'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
            tags: |
              latest

        - script: |
            echo "Installing Trivy scanner..."
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

            echo "Scanning image for HIGH/CRITICAL vulnerabilities..."
            trivy image --no-progress --exit-code 0 --severity HIGH,CRITICAL $(dockerRepository):latest
          displayName: 'Scan Docker Image with Trivy'
- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: Docker
  jobs:
    - job: Deploy
      steps:
        - task: Kubernetes@1
          displayName: 'Deploy Manifests to AKS'
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'devsu-sp'
            azureResourceGroup: 'rg-devsu-devops'
            kubernetesCluster: 'aks-devsu'
            namespace: 'default'
            command: apply
            useConfigurationFile: true
            configuration: |
              k8s/deployment.yaml
              k8s/service.yaml
              k8s/hpa.yaml
              k8s/ingress.yaml
